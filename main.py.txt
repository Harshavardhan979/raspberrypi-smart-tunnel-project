##rfid code or the main code

from machine import Pin, I2C
from mfrc522 import MFRC522
import utime
from ssd1306 import SSD1306_I2C
from oled import Write, GFX, SSD1306_I2C
from oled.fonts import ubuntu_mono_15, ubuntu_mono_20
# Initialize RFID reader and OLED display
rfid_reader = MFRC522(spi_id=0, sck=2, miso=4, mosi=7, cs=5, rst=18)
WIDTH = 128                                            # OLED display width
HEIGHT = 64                                            # OLED display height
i2c = I2C(0, scl=Pin(17), sda=Pin(16), freq=200000)    # Init I2C using pins GP17 & GP16
display = SSD1306_I2C(WIDTH, HEIGHT, i2c)              # Init OLED display
fontSize20 = Write(display, ubuntu_mono_20)

# Dictionary to store trip counts for each unique card
trip_counts = {}
  
while True:
    rfid_reader.init()
    display.fill(0)       
    fontSize20.text("RC522", 40, 0)
    display.text("Interfacing", 25, 22)
    
    (card_status, card_type) = rfid_reader.request(rfid_reader.REQIDL)
    if card_status == rfid_reader.OK:
        (card_status, card_id) = rfid_reader.SelectTagSN()
        if card_status == rfid_reader.OK:
            rfid_card = int.from_bytes(bytes(card_id), "little", False)
            
            # Update trip count for the detected card
            if rfid_card in trip_counts:
                trip_counts[rfid_card] += 1
            else:
                trip_counts[rfid_card] = 1

            # Display trip count and card ID on OLED
            display.fill(0)
            fontSize20.text("Card Scanned!", 0, 0)
            display.text(f"Card: {rfid_card}", 0, 20)
            display.text(f"Trips: {trip_counts[rfid_card]}", 0, 40)
            
            # Optional Access Control
            if rfid_card == 1497986713:
                display.text("Access: Accepted", 0, 50)
            elif rfid_card == 540378515:
                display.text("Access: Denied", 0, 50)
            else:
                display.text("Access: Unknown", 0, 50)
                
            print(f"Detected Card: {rfid_card}, Trips: {trip_counts[rfid_card]}")

    display.show()
    utime.sleep(1)

